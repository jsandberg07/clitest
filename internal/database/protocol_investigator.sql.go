// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: protocol_investigator.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const addInvestigatorToProtocol = `-- name: AddInvestigatorToProtocol :one
INSERT INTO added_to_protocol(id, investigator_id, protocol_id)
VALUES(gen_random_uuid(), $1, $2)
RETURNING id, investigator_id, protocol_id
`

type AddInvestigatorToProtocolParams struct {
	InvestigatorID uuid.UUID
	ProtocolID     uuid.UUID
}

func (q *Queries) AddInvestigatorToProtocol(ctx context.Context, arg AddInvestigatorToProtocolParams) (AddedToProtocol, error) {
	row := q.db.QueryRowContext(ctx, addInvestigatorToProtocol, arg.InvestigatorID, arg.ProtocolID)
	var i AddedToProtocol
	err := row.Scan(&i.ID, &i.InvestigatorID, &i.ProtocolID)
	return i, err
}

const checkInvestigatorProtocol = `-- name: CheckInvestigatorProtocol :one
SELECT id, investigator_id, protocol_id FROM added_to_protocol
WHERE $1 = investigator_id AND $2 = protocol_id
`

type CheckInvestigatorProtocolParams struct {
	InvestigatorID uuid.UUID
	ProtocolID     uuid.UUID
}

func (q *Queries) CheckInvestigatorProtocol(ctx context.Context, arg CheckInvestigatorProtocolParams) (AddedToProtocol, error) {
	row := q.db.QueryRowContext(ctx, checkInvestigatorProtocol, arg.InvestigatorID, arg.ProtocolID)
	var i AddedToProtocol
	err := row.Scan(&i.ID, &i.InvestigatorID, &i.ProtocolID)
	return i, err
}

const removeInvestigatorFromProtocol = `-- name: RemoveInvestigatorFromProtocol :exec
DELETE FROM added_to_protocol
WHERE $1 = investigator_id AND $2 = protocol_id
`

type RemoveInvestigatorFromProtocolParams struct {
	InvestigatorID uuid.UUID
	ProtocolID     uuid.UUID
}

func (q *Queries) RemoveInvestigatorFromProtocol(ctx context.Context, arg RemoveInvestigatorFromProtocolParams) error {
	_, err := q.db.ExecContext(ctx, removeInvestigatorFromProtocol, arg.InvestigatorID, arg.ProtocolID)
	return err
}
