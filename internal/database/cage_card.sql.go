// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: cage_card.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getCageCardsByInvestigator = `-- name: GetCageCardsByInvestigator :many
SELECT cc_id, activated_on, deactivated_on, investigator_id, strain, notes, activated_by, deactivated_by FROM cage_cards
WHERE $1 = investigator_id
`

func (q *Queries) GetCageCardsByInvestigator(ctx context.Context, investigatorID uuid.UUID) ([]CageCard, error) {
	rows, err := q.db.QueryContext(ctx, getCageCardsByInvestigator, investigatorID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []CageCard
	for rows.Next() {
		var i CageCard
		if err := rows.Scan(
			&i.CcID,
			&i.ActivatedOn,
			&i.DeactivatedOn,
			&i.InvestigatorID,
			&i.Strain,
			&i.Notes,
			&i.ActivatedBy,
			&i.DeactivatedBy,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
