you want to have
1. commands that bring you to a new function / state / whatever
2. flags that you can add to like change the date or whatever
3. how to print all the flags and what they do and how to use them
4. tests for it all
5. ways to cancel stuff

do it like the regular command line
detect when things are - then set those flags to be distinct

this mostly works
create a configuation / memory / setting thing
if you go into sub menus, you want the right map to be displayed
what prints on the cli can be set in the cfg 
set the state and the map so youre not always carrying around a map
and then help doesn't have to load in the same map TWICE to print stuff
cause it'll have access to it
and then help just really iterates

AM I INSANE ENOUGH TO CREATE A MIDDLEWARE THAT CHECKS PERMISSIONS INSTEAD OF A DIFFERENT FUNCTION  
nah i dunno

jax says refresh your colonies every 10 generation to avoid genetic drift
CALCULATIONS

//
Create a flag:
symbol, description, and if it takes a value
symbol is without the -
in the getCmd function, $flag := flag{}
add to commands map
add handling in the function itself. takes value are used later, doesnt sets a bool

Create a command:
write the new function (handle flagss)
create a new function getNewCmd() Command {}
flags map := make(map[string]flag)
newCmd := Command{name, description, function, flags}

Create a state:
getState() &State {map, cli message}
make sure to add help by default, prints what is available in current map
getStateMap() and put that in


